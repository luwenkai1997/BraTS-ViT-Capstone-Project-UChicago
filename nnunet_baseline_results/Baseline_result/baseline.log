2025-07-09 23:34:37,231  === new session ===
2025-07-09 23:34:37,285  total=296  finished=0  to_run=296
2025-07-09 23:34:38,346  nnUNetv2_predict launched…
2025-07-10 17:29:35,825  === new session ===
2025-07-10 17:29:37,568  total=296  finished=230  to_run=66
2025-07-10 17:30:44,226  nnUNetv2_predict launched…
2025-07-22 03:11:40,993  === new session ===
2025-07-22 03:11:42,730  total=296  finished=230  to_run=66
2025-07-22 03:11:43,465  nnUNetv2_predict launched…
2025-07-22 03:12:48,189  nnUNetv2_predict launched…
2025-07-22 03:12:52,700  nnUNetv2_predict 退出码：1
2025-07-22 03:12:52,702  --- stdout ---

#######################################################################
Please cite the following paper when using nnU-Net:
Isensee, F., Jaeger, P. F., Kohl, S. A., Petersen, J., & Maier-Hein, K. H. (2021). nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation. Nature methods, 18(2), 203-211.
#######################################################################


2025-07-22 03:12:52,703  --- stderr ---
/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py:84: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(join(model_training_output_dir, f'fold_{f}', checkpoint_name),
Traceback (most recent call last):
  File "/usr/local/bin/nnUNetv2_predict", line 8, in <module>
    sys.exit(predict_entry_point())
             ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 859, in predict_entry_point
    predictor.initialize_from_trained_model_folder(
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 84, in initialize_from_trained_model_folder
    checkpoint = torch.load(join(model_training_output_dir, f'fold_{f}', checkpoint_name),
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/serialization.py", line 1326, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/serialization.py", line 671, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: PytorchStreamReader failed reading zip archive: failed finding central directory

2025-07-22 03:15:02,069  [Fold 0] 源 checkpoint 大小: 246.92 MB
2025-07-22 03:15:02,071  [Fold 1] 源 checkpoint 大小: 246.92 MB
2025-07-22 03:15:02,073  [Fold 2] 源 checkpoint 大小: 246.92 MB
2025-07-22 03:15:02,075  [Fold 3] 源 checkpoint 大小: 246.92 MB
2025-07-22 03:15:02,077  [Fold 4] 源 checkpoint 大小: 246.92 MB
2025-07-22 03:16:30,114  [Fold 0] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:16:30,116  [Fold 1] 目标 checkpoint 大小: 14.35 MB
2025-07-22 03:16:30,118  [Fold 2] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:16:30,119  [Fold 3] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:16:30,121  [Fold 4] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:19:59,001  === new session ===
2025-07-22 03:19:59,046  total=296  finished=230  to_run=66
2025-07-22 03:19:59,281  [Fold 0] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:19:59,702  [Fold 0] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:19:59,704  [Fold 1] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:00,081  [Fold 1] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:00,083  [Fold 2] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:00,410  [Fold 2] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:00,412  [Fold 3] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:00,844  [Fold 3] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:00,847  [Fold 4] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:01,219  [Fold 4] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:01,225  nnUNetv2_predict launched…
2025-07-22 03:20:05,421  nnUNetv2_predict 退出码：1
2025-07-22 03:20:05,422  --- stdout ---

#######################################################################
Please cite the following paper when using nnU-Net:
Isensee, F., Jaeger, P. F., Kohl, S. A., Petersen, J., & Maier-Hein, K. H. (2021). nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation. Nature methods, 18(2), 203-211.
#######################################################################


2025-07-22 03:20:05,424  --- stderr ---
Traceback (most recent call last):
  File "/usr/local/bin/nnUNetv2_predict", line 8, in <module>
    sys.exit(predict_entry_point())
             ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 859, in predict_entry_point
    predictor.initialize_from_trained_model_folder(
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 74, in initialize_from_trained_model_folder
    dataset_json = load_json(join(model_training_output_dir, 'dataset.json'))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/batchgenerators/utilities/file_and_folder_operations.py", line 103, in load_json
    with open(file, 'r') as f:
         ^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/content/nnUNet_results/Dataset232_BRaTS_2023_rGANs/nnUNetTrainer__nnUNetPlans__3d_fullres/dataset.json'

2025-07-22 03:20:53,181  === new session ===
2025-07-22 03:20:53,227  总样本数=296  本次推理=45
2025-07-22 03:20:53,392  Copied dataset.json to model folder: /content/nnUNet_results/Dataset232_BRaTS_2023_rGANs/nnUNetTrainer__nnUNetPlans__3d_fullres/dataset.json
2025-07-22 03:20:53,408  Copied plans.json to model folder: /content/nnUNet_results/Dataset232_BRaTS_2023_rGANs/nnUNetTrainer__nnUNetPlans__3d_fullres/plans.json
2025-07-22 03:20:53,410  [Fold 0] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:53,766  [Fold 0] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:53,768  [Fold 1] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:54,116  [Fold 1] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:54,118  [Fold 2] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:54,416  [Fold 2] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:54,418  [Fold 3] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:54,690  [Fold 3] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:54,692  [Fold 4] 源 checkpoint 大小: 246.92 MB — 开始拷贝
2025-07-22 03:20:54,951  [Fold 4] 目标 checkpoint 大小: 246.92 MB
2025-07-22 03:20:54,957  nnUNetv2_predict launched…
2025-07-22 03:25:30,598  nnUNetv2_predict 退出码：1
2025-07-22 03:25:30,600  --- stdout ---

#######################################################################
Please cite the following paper when using nnU-Net:
Isensee, F., Jaeger, P. F., Kohl, S. A., Petersen, J., & Maier-Hein, K. H. (2021). nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation. Nature methods, 18(2), 203-211.
#######################################################################

There are 45 cases in the source folder
I am process 0 out of 1 (max process ID is 0, we start counting with 0!)
There are 45 cases that I would like to predict

Predicting BraTS-GLI-00824-000_fake_label_48:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_48

Predicting BraTS-GLI-00824-000_fake_label_49:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_49

Predicting BraTS-GLI-00824-000_fake_label_51:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_51

Predicting BraTS-GLI-00824-000_fake_label_54:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_54

Predicting BraTS-GLI-00824-000_fake_label_55:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_55

Predicting BraTS-GLI-00824-000_fake_label_57:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_57

Predicting BraTS-GLI-00824-000_fake_label_58:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_58

Predicting BraTS-GLI-00824-000_fake_label_6:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_6

Predicting BraTS-GLI-00824-000_fake_label_61:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_61

Predicting BraTS-GLI-00824-000_fake_label_63:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_63

Predicting BraTS-GLI-00824-000_fake_label_64:
perform_everything_on_device: True
sending off prediction to background worker for resampling and export
done with BraTS-GLI-00824-000_fake_label_64

Predicting BraTS-GLI-00824-000_fake_label_66:
perform_everything_on_device: True
Prediction on device was unsuccessful, probably due to a lack of memory. Moving results arrays to CPU

2025-07-22 03:25:30,601  --- stderr ---
/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py:84: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(join(model_training_output_dir, f'fold_{f}', checkpoint_name),
/usr/local/lib/python3.11/dist-packages/nnunetv2/utilities/plans_handling/plans_handler.py:37: UserWarning: Detected old nnU-Net plans format. Attempting to reconstruct network architecture parameters. If this fails, rerun nnUNetv2_plan_experiment for your dataset. If you use a custom architecture, please downgrade nnU-Net to the version you implemented this or update your implementation + plans.
  warnings.warn("Detected old nnU-Net plans format. Attempting to reconstruct network architecture "

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:01<00:12,  1.81s/it]
 25%|██▌       | 2/8 [00:02<00:05,  1.12it/s]
 38%|███▊      | 3/8 [00:02<00:03,  1.37it/s]
 50%|█████     | 4/8 [00:03<00:02,  1.53it/s]
 62%|██████▎   | 5/8 [00:03<00:01,  1.64it/s]
 75%|███████▌  | 6/8 [00:04<00:01,  1.71it/s]
 88%|████████▊ | 7/8 [00:04<00:00,  1.76it/s]
100%|██████████| 8/8 [00:05<00:00,  1.80it/s]
100%|██████████| 8/8 [00:05<00:00,  1.52it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.94it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.40it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.12it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.02it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.96it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.93it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.91it/s]
100%|██████████| 8/8 [00:03<00:00,  1.90it/s]
100%|██████████| 8/8 [00:03<00:00,  2.00it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.94it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.40it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.12it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.02it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.96it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.93it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.91it/s]
100%|██████████| 8/8 [00:03<00:00,  1.90it/s]
100%|██████████| 8/8 [00:03<00:00,  2.00it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.94it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.40it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.11it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.01it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.95it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.93it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.90it/s]
100%|██████████| 8/8 [00:03<00:00,  1.89it/s]
100%|██████████| 8/8 [00:04<00:00,  2.00it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.93it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.40it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.11it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.01it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.95it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.92it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.90it/s]
100%|██████████| 8/8 [00:04<00:00,  1.89it/s]
100%|██████████| 8/8 [00:04<00:00,  2.00it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.92it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.39it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.11it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.01it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.95it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.92it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.90it/s]
100%|██████████| 8/8 [00:04<00:00,  1.88it/s]
100%|██████████| 8/8 [00:04<00:00,  1.99it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.91it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.40it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.11it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.00it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.94it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.91it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.89it/s]
100%|██████████| 8/8 [00:04<00:00,  1.88it/s]
100%|██████████| 8/8 [00:04<00:00,  1.99it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.93it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.39it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.10it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.00it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.94it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.91it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.89it/s]
100%|██████████| 8/8 [00:04<00:00,  1.88it/s]
100%|██████████| 8/8 [00:04<00:00,  1.98it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.91it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.39it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.10it/s]
 50%|█████     | 4/8 [00:01<00:02,  2.00it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.94it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.91it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.88it/s]
100%|██████████| 8/8 [00:04<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.98it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.91it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.39it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.09it/s]
 50%|█████     | 4/8 [00:01<00:02,  2.00it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.93it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.90it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.88it/s]
100%|██████████| 8/8 [00:04<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.98it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.90it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.38it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.10it/s]
 50%|█████     | 4/8 [00:01<00:02,  2.00it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.94it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.92it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.89it/s]
100%|██████████| 8/8 [00:04<00:00,  1.88it/s]
100%|██████████| 8/8 [00:04<00:00,  1.99it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.89it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.38it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.10it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.00it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.94it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.91it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.89it/s]
100%|██████████| 8/8 [00:04<00:00,  1.88it/s]
100%|██████████| 8/8 [00:04<00:00,  1.99it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.91it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.38it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.09it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.99it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.93it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.90it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.97it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.90it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.38it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.09it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.99it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.93it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.90it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.88it/s]
100%|██████████| 8/8 [00:04<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.97it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.90it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.38it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.08it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.98it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.92it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.89it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.97it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.88it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.38it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.98it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.92it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.89it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.96it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.89it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.37it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.98it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.92it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.89it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.96it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.89it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.37it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.98it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.92it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.89it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.96it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.88it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.37it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.08it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.98it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.92it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.90it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.97it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.85it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.36it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.98it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.92it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.89it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.96it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.87it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.36it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.97it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.91it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.88it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.96it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.86it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.36it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.98it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.92it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.89it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.87it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.96it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.87it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.35it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.97it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.91it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.88it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.95it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.86it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.35it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.97it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.91it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.88it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.95it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.86it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.35it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.97it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.91it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.88it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.95it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.85it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.35it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.97it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.91it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.88it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.95it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.85it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.35it/s]/usr/local/lib/python3.11/dist-packages/numpy/_core/_methods.py:134: RuntimeWarning: overflow encountered in reduce
  ret = umr_sum(arr, axis, dtype, out, keepdims, where=where)
/usr/local/lib/python3.11/dist-packages/numpy/_core/_methods.py:170: RuntimeWarning: overflow encountered in reduce
  arrmean = umr_sum(arr, axis, dtype, keepdims=True, where=where)

 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]/usr/local/lib/python3.11/dist-packages/nnunetv2/preprocessing/normalization/default_normalization_schemes.py:44: RuntimeWarning: invalid value encountered in divide
  image[mask] = (image[mask] - mean) / (max(std, 1e-8))

 50%|█████     | 4/8 [00:01<00:02,  1.97it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.91it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.88it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.95it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.86it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.34it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.07it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.97it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.91it/s]
 75%|███████▌  | 6/8 [00:02<00:01,  1.88it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.86it/s]
100%|██████████| 8/8 [00:04<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.95it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.85it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.35it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.06it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.96it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.90it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.87it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.95it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.85it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.34it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.06it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.96it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.90it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.87it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.94it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.85it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.34it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.96it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.90it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.87it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.85it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.94it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.85it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.34it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.06it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.96it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.90it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.87it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.94it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.84it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.34it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.94it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.84it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.06it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.96it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.90it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.94it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.82it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.06it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.94it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.83it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.90it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.87it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.94it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.83it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.81it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.84it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.34it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.94it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.83it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.34it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.82it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.04it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.94it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.82it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.81it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.95it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.82it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.04it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.94it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.80it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.03it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.94it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.82it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.82it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.33it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.04it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.94it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.88it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.82it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.83it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.04it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.94it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.86it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.84it/s]
100%|██████████| 8/8 [00:04<00:00,  1.82it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.81it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.04it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.94it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.85it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.82it/s]
100%|██████████| 8/8 [00:04<00:00,  1.92it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.82it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.04it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.94it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.89it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.85it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.82it/s]
100%|██████████| 8/8 [00:04<00:00,  1.93it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.81it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.05it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.94it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.88it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.84it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.81it/s]
100%|██████████| 8/8 [00:04<00:00,  1.92it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.82it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.04it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.93it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.88it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.84it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.81it/s]
100%|██████████| 8/8 [00:04<00:00,  1.92it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.82it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.03it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.93it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.88it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.84it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.81it/s]
100%|██████████| 8/8 [00:04<00:00,  1.92it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.81it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.03it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.93it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.88it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.84it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.81it/s]
100%|██████████| 8/8 [00:04<00:00,  1.92it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.80it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.31it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.02it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.93it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.88it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.84it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.83it/s]
100%|██████████| 8/8 [00:04<00:00,  1.81it/s]
100%|██████████| 8/8 [00:04<00:00,  1.92it/s]

  0%|          | 0/8 [00:00<?, ?it/s]
 12%|█▎        | 1/8 [00:00<00:01,  3.80it/s]
 25%|██▌       | 2/8 [00:00<00:02,  2.32it/s]
 38%|███▊      | 3/8 [00:01<00:02,  2.02it/s]
 50%|█████     | 4/8 [00:01<00:02,  1.92it/s]
 62%|██████▎   | 5/8 [00:02<00:01,  1.87it/s]
 75%|███████▌  | 6/8 [00:03<00:01,  1.84it/s]
 88%|████████▊ | 7/8 [00:03<00:00,  1.82it/s]
100%|██████████| 8/8 [00:04<00:00,  1.81it/s]
100%|██████████| 8/8 [00:04<00:00,  1.91it/s]

  0%|          | 0/16 [00:00<?, ?it/s]
  0%|          | 0/16 [00:00<?, ?it/s]

  0%|          | 0/16 [00:00<?, ?it/s]
  0%|          | 0/16 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 643, in predict_sliding_window_return_logits
    predicted_logits = self._internal_predict_sliding_window_return_logits(data, slicers,
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 607, in _internal_predict_sliding_window_return_logits
    raise e
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 590, in _internal_predict_sliding_window_return_logits
    prediction = self._internal_maybe_mirror_and_predict(workon)[0].to(results_device)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 537, in _internal_maybe_mirror_and_predict
    prediction = self.network(x)
                 ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/dynamic_network_architectures/architectures/unet.py", line 61, in forward
    skips = self.encoder(x)
            ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/dynamic_network_architectures/building_blocks/plain_conv_encoder.py", line 86, in forward
    x = s(x)
        ^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/dynamic_network_architectures/building_blocks/simple_conv_blocks.py", line 137, in forward
    return self.convs(x)
           ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/dynamic_network_architectures/building_blocks/simple_conv_blocks.py", line 71, in forward
    return self.all_modules(x)
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/conv.py", line 725, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/conv.py", line 720, in _conv_forward
    return F.conv3d(
           ^^^^^^^^^
RuntimeError: Given groups=1, weight of size [32, 4, 3, 3, 3], expected input[1, 2, 128, 160, 112] to have 4 channels, but got 2 channels instead

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/bin/nnUNetv2_predict", line 8, in <module>
    sys.exit(predict_entry_point())
             ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 864, in predict_entry_point
    predictor.predict_from_files(args.i, args.o, save_probabilities=args.save_probabilities,
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 256, in predict_from_files
    return self.predict_from_data_iterator(data_iterator, save_probabilities, num_processes_segmentation_export)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 373, in predict_from_data_iterator
    prediction = self.predict_logits_from_preprocessed_data(data).cpu()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 490, in predict_logits_from_preprocessed_data
    prediction = self.predict_sliding_window_return_logits(data).to('cpu')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 649, in predict_sliding_window_return_logits
    predicted_logits = self._internal_predict_sliding_window_return_logits(data, slicers, False)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 607, in _internal_predict_sliding_window_return_logits
    raise e
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 590, in _internal_predict_sliding_window_return_logits
    prediction = self._internal_maybe_mirror_and_predict(workon)[0].to(results_device)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/predict_from_raw_data.py", line 537, in _internal_maybe_mirror_and_predict
    prediction = self.network(x)
                 ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/dynamic_network_architectures/architectures/unet.py", line 61, in forward
    skips = self.encoder(x)
            ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/dynamic_network_architectures/building_blocks/plain_conv_encoder.py", line 86, in forward
    x = s(x)
        ^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/dynamic_network_architectures/building_blocks/simple_conv_blocks.py", line 137, in forward
    return self.convs(x)
           ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/dynamic_network_architectures/building_blocks/simple_conv_blocks.py", line 71, in forward
    return self.all_modules(x)
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/conv.py", line 725, in forward
    return self._conv_forward(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/conv.py", line 720, in _conv_forward
    return F.conv3d(
           ^^^^^^^^^
RuntimeError: Given groups=1, weight of size [32, 4, 3, 3, 3], expected input[1, 2, 128, 160, 112] to have 4 channels, but got 2 channels instead
Process SpawnProcess-8:
Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/data_iterators.py", line 58, in preprocess_fromfiles_save_to_queue
    raise e
  File "/usr/local/lib/python3.11/dist-packages/nnunetv2/inference/data_iterators.py", line 50, in preprocess_fromfiles_save_to_queue
    target_queue.put(item, timeout=0.01)
  File "<string>", line 2, in put
  File "/usr/lib/python3.11/multiprocessing/managers.py", line 837, in _callmethod
    raise convert_to_error(kind, result)
multiprocessing.managers.RemoteError: 
---------------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/managers.py", line 260, in serve_client
    self.id_to_local_proxy_obj[ident]
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
KeyError: '7d1a459bf350'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/managers.py", line 262, in serve_client
    raise ke
  File "/usr/lib/python3.11/multiprocessing/managers.py", line 256, in serve_client
    obj, exposed, gettypeid = id_to_obj[ident]
                              ~~~~~~~~~^^^^^^^
KeyError: '7d1a459bf350'
---------------------------------------------------------------------------

